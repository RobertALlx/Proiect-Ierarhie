import { test, expect,chromium  } from '@playwright/test';
test.setTimeout(120_000); 
test('Test Case Navigation:Testing navigation on the web', async () => {
  const browser = await chromium.launch({ headless: false, slowMo: 1000 });
  const context = await browser.newContext();
  const page = await context.newPage();
  await page.goto('https://demoqa.com/');
  await expect(page.getByRole('banner')).toBeVisible();
  await expect(page.getByRole('link').filter({ hasText: /^$/ })).toBeVisible();
  await expect(page.locator('.home-banner')).toBeVisible();
  await expect(page.locator('div').filter({ hasText: 'ElementsFormsAlerts, Frame &' }).nth(3)).toBeVisible();
  await page.getByRole('heading', { name: 'Alerts, Frame & Windows' }).click();
  await page.locator('span').filter({ hasText: 'Widgets' }).locator('div').first().click();
  await expect(page.getByRole('listitem').filter({ hasText: 'Accordian' })).toBeVisible();
  await expect(page.locator('span').filter({ hasText: 'Widgets' }).locator('div').first()).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: 'Auto Complete' })).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: 'Date Picker' })).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: 'Slider' })).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: 'Progress Bar' })).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: 'Tabs' })).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: 'Tool Tips' })).toBeVisible();
  await expect(page.getByRole('listitem').filter({ hasText: /^Menu$/ })).toBeVisible();
  await expect(page.getByText('Select Menu')).toBeVisible();
  await page.getByRole('listitem').filter({ hasText: 'Slider' }).click();
  await page.getByRole('slider').fill('30');
  await expect(page.getByRole('slider')).toBeVisible();
  await expect(page.getByRole('heading')).toContainText('Slider');
  await page.locator('span').filter({ hasText: 'Interactions' }).locator('div').first().click();
  await expect(page.getByText('Sortable')).toBeVisible();
  await expect(page.getByText('Selectable')).toBeVisible();
  await expect(page.getByText('Resizable')).toBeVisible();
  await expect(page.getByText('Droppable')).toBeVisible();
  await expect(page.getByText('Dragabble')).toBeVisible();
  await page.getByRole('listitem').filter({ hasText: 'Sortable' }).click();
  await page.getByLabel('List').getByText('One').click();
  await page.getByLabel('List').getByText('Two').click();
  await expect(page.getByLabel('List').getByText('One')).toBeVisible();
  await expect(page.getByLabel('List').getByText('Two')).toBeVisible();
  await expect(page.getByLabel('List').getByText('Three')).toBeVisible();
  await page.getByRole('heading', { name: 'Sortable' }).click();
  await expect(page.getByLabel('List').getByText('Four')).toBeVisible();
  await expect(page.getByLabel('List').getByText('Five')).toBeVisible();
  await expect(page.getByLabel('List').getByText('Six')).toBeVisible();
  await page.getByRole('listitem').filter({ hasText: 'Selectable' }).click();
  await expect(page.getByText('Cras justo odio')).toBeVisible();
  await expect(page.getByText('Dapibus ac facilisis in')).toBeVisible();
  await expect(page.getByText('Morbi leo risus')).toBeVisible();
  await expect(page.getByText('Porta ac consectetur ac')).toBeVisible();
  await page.locator('span').filter({ hasText: 'Elements' }).locator('div').first().click();
  await expect(page.getByText('Text Box')).toBeVisible();
  await expect(page.getByText('Check Box')).toBeVisible();
  await expect(page.getByText('Radio Button')).toBeVisible();
  await expect(page.getByText('Web Tables')).toBeVisible();
  await expect(page.getByText('Buttons')).toBeVisible();
  await expect(page.getByText('Links', { exact: true })).toBeVisible();
  await expect(page.getByText('Broken Links - Images')).toBeVisible();
  await expect(page.getByText('Upload and Download')).toBeVisible();
  await expect(page.getByText('Dynamic Properties')).toBeVisible();
  await page.getByRole('listitem').filter({ hasText: 'Text Box' }).click();
  await expect(page.locator('#userForm')).toContainText('Full Name Email Current Address Permanent Address Submit');
  await page.getByRole('listitem').filter({ hasText: 'Check Box' }).click();
  await expect(page.locator('span').filter({ hasText: 'Home' }).first()).toBeVisible();
  await page.getByRole('listitem').filter({ hasText: 'Radio Button' }).click();
  await expect(page.getByRole('heading', { name: 'Radio Button' })).toBeVisible();
  await page.getByText('Do you like the site?').click();
  await page.locator('div').filter({ hasText: /^Yes$/ }).click();
  await expect(page.getByText('Do you like the site?')).toBeVisible();
  await expect(page.locator('label').filter({ hasText: 'Yes' })).toBeVisible();
  await expect(page.getByText('You have selected Yes')).toBeVisible();
  await page.locator('div').filter({ hasText: /^Impressive$/ }).click();
  await expect(page.getByText('Do you like the site?')).toBeVisible();
  await expect(page.locator('label').filter({ hasText: 'Impressive' })).toBeVisible();
  await expect(page.getByText('You have selected Impressive')).toBeVisible();
});